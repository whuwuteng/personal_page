{
  
    
        "post0": {
            "title": "口吃",
            "content": "口吃 . 前言 . 作为一个口吃的人，相信每个人都不愿意讨论这个话题，因为它一直伴随着我们每一天，在本该无忧无虑的小时候，希望得到别人认可的中学，需要探索的大学等等。但是，口吃这个问题，成为我们每个人心中的痛，因为它很明显，一说话就出现，藏也藏不住。相信或许有些人有这样的想法，觉得如果是其他的残疾交换，比如手或脚不便来交换口吃，都愿意交换。随着人生的阅历，我现在已经不这样想了。我妈有时候开玩笑，说如果我说话像他一样，说不定现在可以找到更好的岗位，我回复说，如果我说话更流利，说不定在农村初中都没读完就出去打工了，现在我觉得，口吃才造就了现在的我。在这里我要感谢我妈妈，她是一直相信和鼓励我的人。 . 要明白我们也是正常的人，我们也希望得到别人喜欢和认可，但是因为口吃，可能我们觉得只要别人不鄙视我们就行了，但是不要这样想。 要明白每个人都有自己的烦恼，别人不能决定什么，所以不要太在乎别人的感受，只有不在意别人的感受，面对口吃的时候，能轻松一些。这么多年的嘲笑已经让我们免疫了，只有不在乎别人的感受，才更好面对口吃。不过这个也有一个问题，我老婆现在就是觉得我不在乎她的感受。 . 介绍 . 我是一个出生农村的小孩，小时侯家里很穷，爸爸妈妈要种田，负担很重，也没时间管我们。我们没有爷爷奶奶，而且外公外婆的封建思想很重（不愿意照顾外孙），所以我们也没有在外公外婆家待过。我是家中最小的那个，有哥哥和姐姐，所以感觉我就是被放养的那个，可能从小也不够好看（从小对别人说丑已经免疫了），不够机灵和聪明，在农村这种复杂的社会中，更加不会被关注了。我爸爸有口吃，所以我们三个都有，不过哥哥姐姐挺外向的，所以他们并不重，所以我是最重的那个，所以就更加不被看好了，不知道是不是自卑与口吃有伴随关系，所以一直到大学，我的口吃都很严重，在我读大学前去了一个所谓的口吃矫正学校，那个老师说我基本不能交流，所以就知道我当时有多么严重了。 . 经过 . 从我记事起，这个问题就一直在我脑海里，小时候大年初一要跟村里的人拜年，这一天成为我最难熬的一天，因为我要跟我哥哥一起，跟别人打招呼，可是我一打招呼就口吃，所以我跟其他小孩相反，非常不喜欢过年。我在读初中的时候，在一个村里的初中，一天到小卖部买雪糕，可能因为我是班上数学成绩最好的，数学老师又是小卖部的老板，所以他很关心的问我给了多了钱，我当时说“一一….块”，别的同学开玩笑说“一亿块”，结果大家都笑了，虽然我知道他是好意，但是这件事还是让我不好受了很久，初中班上的老师也很鼓励我说话，我现在回忆起来，当时还觉得老师这样说很讨厌，现在不这么想了。到初二，这个中学因为学生少，别撤销了，所以我不得不去镇上的初中，可能因为有成绩更好的学生，所以再也没有老师跟我提到口吃，因为他们很少跟我说话。有一次，一个语文老师让我读书，我磕磕绊绊读完后，她说了一句，“好有毅力”，再也没有让我读过了。一直到高中结束，我感觉这段时间就是每天都不说话，好好看书。可能就是因为我不喜欢交流，虽然我花很多时间在语文上，语文成绩还是不好。可能，这段时间，我一直在认真读书，想着怎么提高成绩，所以也没在乎别人的嘲笑。 . 高考完了之后，因为考得并不理想，所以我消沉了很久。在去口吃学校之后，我才发现有这么多人跟我一样，而且他们成绩还不好，这个时候，我才发现我并不是最差的人。所以，我才更多的跟其他人接触，虽然有口吃，但是还走出了交流的这一步。 . 大一的时候，看到其他的同学都很适应学校的生活，而我当时还在消沉的打游戏，记得有一次，独自从网吧出来，五小时候游戏，人我出来的时候很空虚，我当时想到，我一个农村的小孩，怎么成为了自己小时候的反面教材了。于是，我就花很多时间在学习上，所以后来发现，我还是很适合学习的。后来到大三，我找到了女朋友，因为我知道我有口吃的问题，所以我一定要找一个话多的人，就找到了。到我发现，就算我跟女朋友说话，还是口吃，加上我的普通话也不标准，所以我就尝试这连一下，女朋友当时很支持，所以我就每天都到学校的花坛附近读半个小时的书，后来发现，我也流利和顺畅多了，这个习惯一直持续到我博士毕业。 . 走出这步跟别人交流之后，我感觉这就是面对口吃最好的办法，因为在这个过程中，你会发现你是有用的，这样可以增加自己的自信心，更好的面对口吃。 . 在国内的博士和博后期间，我发现，当我说到自己了解的地方，基本不会有什么问题，而自己不确定的地方，则很容易口吃，因为自己不确定的地方，在说的时候会认真想一下，然后就口吃了，所以，一段时间，我就会认真了解跟我相关的内容，知道他们是怎么做的，后来发现不仅可以增加自己的信息，这也对做研究还是很有好处的。 . 不过刚到法国的时候，由于法语基本没学过，又加上英语没有练过，所以当时度过了一段时间很艰难的时候，经常被别人说英语听不懂。在这个过程中，我只能一边自己练习，然后尽量找人一起练习。而且，英语还不是母语，更加增加了这个困难。当时，我跟自己说的最多的就是，没有人在乎你，只要能锻炼出来，丢再多的脸也是值得的。后来，经过了差不多一年多，我发现英语虽然偶尔有口吃，但是别人基本也能听懂自己说的了。 . 后来，当我决定开始练习法语时，这个问题就更加重了，因为英语毕竟学习了这么多年，虽然没有怎么说，但是听和看的能力在那，所以说话的时候思考的时间更多，口吃更严重，所以当自己磕磕绊绊的说出来之后，别人回答说完全听不懂，这个确实对人的打击挺大的。不过，由于当时已经有心理预期，所以没太在乎别人的答复，所以还在慢慢提高。后来，为了提高法语，主动跟学校的老师说，我要去用法语上课，这个也是为了能提高法语的练习机会，敢于面对口吃，才是摆脱口吃的最好办法。 . 这个口吃问题最让我困扰时候，是自己找工作的时候，因为英语和法语都不是母语，可以想象到当时的困难，不过，我感觉这个就更加需要练习了，我也写了一个文章，具体的可以看里面的内容。 . 最后 . 可能，由于我的运气比较好，博士顺利毕业之后，在法国做博后，然后拿到了这边少有的研究岗位，周围的人认为口吃对我的影响不大。但是，我想说的，口吃也对我有很大的困扰，我一度不敢打电话，不敢用对讲机，不敢开口说话等等，不过，这都没有关系，只要自己认为口吃并不影响工作和生活，敢于不在乎别人的看法，达到沟通的目的就行了，敢于面对口吃，才是摆脱口吃的最好办法。 . 感悟 . 要理解口吃这个缺点，要明白，没一个人都有缺点，只是大家的缺点不同而已，而口吃这个缺点能让我们更加理解别人的不容易。要知道每一个人都有适合自己的方式，包括工作和生活，不能因为口吃就否定自己的。 . 与别人交流的时候，一定要明白信息传达是主要的，说话流利只是表现形式，大家都很忙，有自己的烦恼，没有人在乎你是否口吃。 . 口吃跟多的是要锻炼，多跟别人交流，跟不同的人说话，这样才可以更好面对口吃。还有，就是自己也要多练，独处的时候读书，如果需要跟别人说话的，也要逼迫自己去说话。 . 明白紧张是很正常的，每个人都会紧张。要相信在紧张的时候，我们也能处理好口吃，明白交流的作用的信息交流，在紧张时候，把想说的话说完就行，即使口吃也没关系。 . 我用的都是面对口吃，不是战胜口吃，因为我觉得它可能不会消失的，只要能把它的影响减到最小，不影响工作和生活就行了。 . 最后，这篇文章只是介绍一下自己的经历，我不想像“成功学”那样说，认为每个人都可以这样。因为我也看到有人因为身体的问题，说话很口吃，看着就不像心理问题的。我也知道每个人的成长经历和条件都不同，只希望给有些人帮助。 .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2024/06/24/begaiment.html",
            "relUrl": "/markdown/2024/06/24/begaiment.html",
            "date": " • Jun 24, 2024"
        }
        
    
  
    
        ,"post1": {
            "title": "博士生面试感受",
            "content": "博士生面试感受 . 前言 . 作为一个刚入职不久的CR，对于角色的转变有一些困惑，写这个主要是一些思考和启发，也希望能帮助到一些人。由于我是在国内的1+4的博士生，对与国外的博士招聘不了解，也不知道需要考察什么问题，而且法国和国内的大学体制也区别很大，也增加了一些问题。最近作为encadrant参与一个CIFRE的博士项目，由于我不是directeur de thèse，因此基本只需参与就可以，下面说一下感受。由于也是第一次参与这样的招聘，也希望以后回过头看，有个备份。 . 经过 . 面试一开始，主要就是directeur de thèse 和encadrant的介绍，比较简短。然后就是学生的介绍，学生是法国人的话，他简单介绍包括bac的专业和prépa，主要就是介绍了工程师学校的部分，包括主要是stage（实习），有段时间和长时间的。然后老师会对stage提出一些问题。最后就是他对博士课题的看法，然后对博士课题的一些问题。学生结束之后，我们就会留下来讨论一下，如果是不行的话，当场就不考虑了，如果是可以(positive)，就会比较一下。 . 感受 . 目前我的感受是： . 实习跟博士课题的相关性没有那么关键，没有必要说非要分博士课题一致，因为硕士毕业能发文章的毕竟是少数 . | 学生思考很重要，就是要有想法，另外一点也说明有自主性，这一条是他们讨论比较多的 . | 学生对博士课题看了之后，提出的问题很重要，如果能提出一些老师觉得好的问题就比较加分 . | 回答问题不要怕，有个学生一个问题没回答上来，有个老师都说了这是一个question piège，他还是回答不了，发现影响也不大 . | 就是做的实习不要太分散，这个老师也会考虑，会让人觉得不stable . | . 其实，之前也和其他的人讨论过怎么评判学生，感觉每个老师都有不同的标准，有的是看一下成绩单，实习的内容，介绍实习的内容，问一些问题，实现一些算法等。不过，一个小时的面试确实很难看出来学生的问题，我也听到过老板对学生工作不满意的话。 . 最后，希望和大家多多交流，谢谢。 .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2024/06/20/entretien.html",
            "relUrl": "/markdown/2024/06/20/entretien.html",
            "date": " • Jun 20, 2024"
        }
        
    
  
    
        ,"post2": {
            "title": "LiDAR测量原理",
            "content": "LiDAR测量原理 . 引言 . 在摄影测量中，有很多文档对于相机的原理的进行分析，但是对于LiDAR的测量原理分析的并不多。可能的原因是，在实际测量的过程中，对于LiDAR的测量数据，处理时都已经是点云了，因此不太关注它的原理。 . 同时，有一点值得说明的是，在技术原理上LiDAR与RADAR上有许多相似的地方，这是值得思考的地方。 . 不过对于多源数据处理，或想通过在几何上处理的(例如ray tracing)，了解原理还是很重要的。 . 《Airborne and Terrestrial Laser Scanning》by George Vosselman, Hans-Gerd Maas 的第一章就是介绍原理的。 . LiDAR很早之前就用于水下测量(bathymetry)，主要是(蓝)绿色波段(532 nm)，具有更强的能量。 . https://www.britannica.com/science/color/The-visible-spectrum . 下面的内容主要围绕近红外(～1064 nm)LiDAR进行展开讨论。 . 从原理上讲，主要有两种方式：Time-of-flight 与Phase based method ： . https://www.laserscanning-europe.com/en/servicesdevices/terrestrial-laser-scanners . Forward-looking infrared(FLIR) 是一种被动的红外摄影相机，目前应用遥感与车载等。 . 从1960年开始，LiDAR应用在测量中，目前有卫星LiDAR(IceSat) . https://icesat-2.gsfc.nasa.gov/science/data-products . 机载LiDAR，UVA(无人机)LiDAR，车载LiDAR，Terrestrial (total station or static) LiDAR与室内LiDAR等，下面主要对机载LiDAR进行说明。 . 扫描原理 . 由于在处理LiDAR点云的过程中，一直处理的是LiDAR坐标信息，以为LiDAR大都是线阵扫描的，实际上还有很多是圆形扫描的，比如Leica TerrainMapper。扫描方式与镜面的旋转方式有关，对于获得的点云来说，会影响到点云的密度，扫描的角度的大小等。 . 扫描方式有：zigzag扫描，线性扫描，圆形扫描，Terrestrial LiDAR 扫描等。 . zigzag扫描应该是较早商业化的设备，优点是设计简单，可以适应各种设置，但是缺点是会造成密度不均匀。 . 线性扫描用一个旋转的棱柱实现线性扫描，比zigzag扫描方式相比，点云的密度是均匀的，这个应该是目商业化设备比较多的，目前接触的数据大多是这一类的。 . 圆形扫描刚开始有点奇怪，仔细思考了之后，优点是方便建筑物的墙壁。 . Terrestrial LiDAR 扫描是因为扫描仪是不动的，所以有垂直扫描与水平扫描。 . 测量原理 . 对于LiDAR来说，测量是用的Time-of-flight， 根据光速和返回时间可以进行测量，目前获得的数据有：2D LiDAR 距离数据加上角度信息，多次回波，全波段LiDAR等。 . 目前大部分机载LiDAR数据都是LAS格式，是多次回波数据，当然还有全波段数据。 . 辐射 . LiDAR数据的辐射指的强度值(intensity)，辐射是用的比较多的，但是但是由于LiDAR是主动传感器，因此生成的影像和传统影像有一些区别。辐射矫正这块貌似做的人挺少的，貌似硬件也没有辐射矫正。同时也说明在辐射这块也有很多可以做的地方。 . ## 精度 . 应用 . 由于LiDAR设备和应用已经有很多了，里面也有很多没有展开说明的地方，欢迎提修改意见，最后，如有不对的地方，请批评指正。 . 参考 . https://www.linkedin.com/posts/uwebacher_mapping-lidar-photogrammetry-activity-7159227027311448065-bIEt/?utm_source=share&amp;utm_medium=member_desktop . https://www.linkedin.com/posts/uwebacher_citymapper2-dmc4-contentmapper-activity-7162889902618013696-zRbi/?utm_source=share&amp;utm_medium=member_desktop . https://www.linkedin.com/posts/uwebacher_lidar-mapping-photogrammetry-activity-7165704865640386560-I0ov/?utm_source=share&amp;utm_medium=member_desktop . https://www.linkedin.com/posts/uwebacher_lidar-terrainmapper3-activity-7171197600547684352-HzR5/ .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2024/04/15/LiDAR.html",
            "relUrl": "/markdown/2024/04/15/LiDAR.html",
            "date": " • Apr 15, 2024"
        }
        
    
  
    
        ,"post3": {
            "title": "核线影像的坐标转换",
            "content": "核线影像的坐标转换 . 核线影像介绍 . 核线影像（Epipolar image）是摄影测量的概念，可以看到计算机视觉不是这个说法，叫什么对极几何。当然，不管怎么叫法，都是一样的，指同名点在同一条直线上。 . 记得在摄影测量的课程上是通过左右影像的水平核线采样实现的，可以参考摄影测量的教材，这个方法对于航空影像和卫星影像适用，但是，对于拍摄角度相差较大时，产生的变形太大，目前都是用计算机视觉的方法，可以参考《Multiple_View_Geometry_in_Computer_Vision》。 . 核线影像坐标到原始影像 . 通过计算机视觉的方法，计算出homography矩阵对影像进行变换。实际应用上，得到的是影像新的旋转矩阵，在个变换过程中，相当于影像有了新的外方位元素，焦距也是没有变的：核线影像有新的内外方位元素。 . 实际上，外方位元素也只有旋转矩阵发生变化，如果不考虑多视交会，可以直接用新的内外方位元素计算三位坐标。这个地方也是与摄影测量不同的地方，就是用摄影测量的方法，核线影像是一个临时的，没有定位信息，密集匹配结果要转换到原始影像才能计算三维坐标。 . 如果涉及核线影像的坐标到原始影像的坐标，那就是涉及到一个变换 ： . 相机的位置不变，只是旋转矩阵变化了 . 这个问题也设计到全景影像的拼接，实质是一样的，可以参考文档。 . 几何变换 . 具体几何变换可以参考《Multiple_View_Geometry_in_Computer_Vision》8.4.5和《Computer Vision: Algorithms and Applications》的Mapping from one camera to another . 公式为： begin{align} x_2=K_2 R_2 R_1^{-1} K_1^{-1} x_1 end{align} 其中$x_1$是在核线影像（相机1）的坐标，$K_1$是核线影像（相机1）的内方位矩阵，$R_1$是核线影像（相机1）的旋转矩阵，$K_2$是原始影像（相机2）的内方位矩阵，$R_2$是原始影像（相机2）的旋转矩阵。 . 下面是主要的代码，依赖Eigen : . // epi_xx是核线影像对应的参数 // org_xx是原始影像对应的参数 Eigen::Vector2d GlobTransfoEpip(Eigen::Vector2d epixy, CImgCameraIOP * pEpiCameraIop, Eigen::Matrix3d epiExtrinsicRotate, CImgCameraIOP * pOrgCameraIop, Eigen::Matrix3d orgExtrinsicRotate) { double x3 = 0; double y3 = 0; // K-1 * x pEpiCameraIop-&gt;Image2World(epixy(0), epixy(1), &amp; x3, &amp; y3); Eigen::Vector3d worldxyz; worldxyz(0) = x3; worldxyz(1) = y3; worldxyz(2) = 1.0; Eigen::Vector3d aC = epiExtrinsicRotate.inverse() * worldxyz; Eigen::Vector3d orgxyz = orgExtrinsicRotate * aC; double worldx = orgxyz(0)/orgxyz(2); double worldy = orgxyz(1)/orgxyz(2); double x = 0; double y = 0; // K * x pOrgCameraIop-&gt;World2Image(worldx, worldy, &amp; x, &amp; y); Eigen::Vector2d orgxy; orgxy(0) = x; orgxy(1) = y; return orgxy; } . 最后，如有不对的地方，请批评指正。 .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2024/02/09/epi.html",
            "relUrl": "/markdown/2024/02/09/epi.html",
            "date": " • Feb 9, 2024"
        }
        
    
  
    
        ,"post4": {
            "title": "法国学术职位经验",
            "content": "法国学术职位经验 . 学术岗位介绍 . 写这篇博文的目的是给其他需要在法国找学术职位的人一些经验和参考，希望对还在法国学术圈挣扎的人一些帮助，只讨论学术岗位，其他不在讨论范围内。 . 法国的初级学术岗位(博士毕业或博后申请)主要有三种：Chargé de recherche，Enseignant-chercheur(maître de conférence)，Ingénieur de recherche，其他的就是研究的辅助岗位，不详细说了，可以参考1。 . 这个其中区别，也要看具体的研究单位，比如CNRS和Inria，Chargé de recherche和Ingénieur de recherche是完全区分的，Ingénieur de recherche只是作为Chargé de recherche的辅助，所以他们的concours是分开的，详细可以参考CNRS的Chargé de recherche的concours2和Ingénieur de recherche的concours3。在有些研究单位，大部分研究人员(主要工作是指导博士生和申请项目)都是Ingénieur de recherche，只有极少数人是Chargé de recherche，如CEA4和ONERA5，CEA中也有Ingénieur de recherche不带学生发文章的。也有单位很模糊的，比如我们单位，有的人是Ingénieur，有的人有时候做Chargé de recherche的工作， 有时候做Enseignant-chercheur的工作；有的人做纯工程师的工作；有的人做工程师的工作之外，做一点研究(不多)，基本不发文章，没有博士生。不过，我是后来才知道的，这种Ingénieur的工资的计算是比chargé de recherche高的。我们是研究单位，研究部门中的研究人员有两部分组成，一部分是单位内的研究人员，进来时是Ingénieur(这个和法国精英教育体制有关系)，另一部分是Ministère de la Transition énergétique的，进来时是Chargé de recherche，要通过concours，进来时是有编制的(在法国叫fonctionnaire)。 . Enseignant-chercheur(maître de conférence)对应学校的副教授岗位，maître de conférence相当于是有编制(在法国叫fonctionnaire)的Enseignant-chercheur，是通过GALAXIE6 招的，则是有编制的，不过前提是要通过一年一次的qualification7，明年等我他通过了，可能会写一个详细的介绍。Enseignant-chercheur一般指单位自己招的，就是没有编制(也是CDI永久岗位)。相对来说，在法国这样的岗位比纯研究岗位多很多，因为他们一年有192h的上课任务。我们单位有一个école，因此又有一部分Enseignant-chercheur，但是很多Enseignant-chercheur的人都因为长期不参加研究项目，最后都成为纯Enseignant了。这个要说一下，法国大学也有只教学的岗位，一年有384h的上课任务，相当于是已经离开了科研了。 . 背景介绍 . 我自己是国内本科+直博，在法国一个研究所做博士后，考虑到目前方向在巴黎没有其他的单位，家庭的因素，而且如果去计算机专业竞争学术岗位基本也没有机会，因此目前的研究所是我的首选。下面，我将对整个过程中经历和感受作介绍，希望给大家一些帮助。 . Chargé de recherche(fonctionnaire) . 在2023年初，我们组(博后导师是组的leader)要招一个研究岗，但是由于导师生病，半年(从招聘开始到结束)都没来单位上班，这也给申请过程中带来了一些困难。这个岗位是Ministère de la Transition énergétique(MTE)的Chargé de recherche，可以通过网站8报名，一般是二月开始，然后大概一个月结束。在网站上有详细的介绍，根据材料的说明进行准备。 . 提交材料中主要包括博士的论文评审答辩材料，这个在法国很关键，我是通过学校的档案馆拿到之后翻译的，其他的有学术生涯的总结等。这个其中最关键的是projet de recherche，有点类是国内的申请项目书。这个projet de recherche要根据岗位申请说明来，一般来说，研究工作都是一个很大的范围，要联系写这个岗位申请的人。在fichie de poste(岗位介绍)中，通常有多个(3-4)联系人，通常找组leader联系是比较稳妥的，lab的leader有可能对合作经费等方面更在意。 . 材料上交之后就是等面试了，面试的时间是严格控制在30分钟的，个人的presentation是15分钟，然后回答问题15分钟。个人的prensentation主要是自己的介绍，包括研究经历、文章、教学等，然后主要是projet de recherche(感觉10分钟左右)。跟普通的面试差不多，就是基于科研、教学和projet de recherche的问题。要注意的是，就算是研究岗位，也是有教学任务的，一年是64h的教学任务，所以教学经历最好也是有的。 . 这个过程中的经验是： . （1）由于岗位的工资来至于MTE，因此招聘单位在jury当中没有发言权。对于我这种情况，已经在招聘单位工作，招聘单位的人不会给意见(我的导师多次说他不能帮我更多了，因为要保证公平性)。jury是由跟单位无任何利益关系的人组成的，一般由7个左右，最后那天招聘单位去2个人，只是去旁听，不会提问，也不会跟其他的jury提意见。当然，招聘单位是有最后的决定权的，他们可以选择一个也不要，也可以选择要liste中的其他人，我记得一个中国的名字在面试之后排在第一，但是最后的结果确实第二，这个可能是招聘单位的意见。但是招聘单位一般不会这样做，因为他们要给一个说服MTE的理由。 . （2） 根据联系人给的信息之后，准备projet de recherche，这个比较关键，跟自己的研究经历有关或者连续性的研究项目。类似于研究计划，但是感觉跟项目申请书更像，就是写自己打算做啥，有什么创新等，这个研究计划在15页内就可以了。从(1)中可以看出来，jury并不是很清楚单位需要什么人，所以尽量在研究范围内跟自己的研究方向深入的写。因为我导师是组的leader，所以我最清楚要招什么人。但是我在prensentation中提出，我的研究计划正好是延续一个离开的Chargé de recherche的研究内容时，一个jury表示反对，我感觉我对jury那个问题回答并不好。准备的过程中，导师觉得这个理所当然，但是jury觉得这个不合理，我也不知道怎么解释。 . （3）在法国，博士毕业之后去其他研究所(或者出法国)对法国竞争岗位也是很关键的，这一项也是考察范围。 . （4）面试可以用法语或英语。我在自我介绍时用的发育，后面到技术部分用的英语，回答问题也是用的英语。不过，有个人还是让我用法语总结自己的教学部分，所以法语对他们还是很关键的。 . （5）在jury当中，只有1-2个人跟自己的专业是相关(只是相关，研究方法会有很大的差异)，所以在介绍projet de recherche最好是能简单一些，就是能让其他专业的人也能听懂。 . （6）在做prensentation的那部分，尽量熟练。由于英语和法语不是母语，对于我自己有一些困难。同时因为我自己的原因，所以交流一直是我的问题。但是我发现，把slide做好后，然后开始写稿，一步步去精华台词，最后发现可以无意识的把后面一句说出来，在做prensentation时不会太紧张。 . （7）单位的人不会透露你竞争对象是谁，我也是最后一天面试的时候看到他我才知道是谁的，因为他是我们单位毕业的博士，我有一些印象。 . 结果： . 在差不多两周之后就出面试结果，面试结果之后一个月，会公布最后的结果，这些结果都是发布到网站上，并不会发邮箱通知。 . 我知道我面试排第二时，还是很失落的，不过还是希望通过这些经验，能给大家一些帮助。 . Directeur de recherche junior(CDD) . 在2023年5月，在实验室另外一个组要招一个directeur de recherche junior9，这个岗位在大学中对应是 la chaire de professeur junior。由于我们单位是研究单位，所以是研究员性质的，而不是教授性质的。它是一个tenure track，要求是3-6年要拿到博导资格(habilitation à diriger des recherches, HDR)，之后就是CDI了。这个岗位是学美国的，对于法国人获得CDI的教职岗位并不难，所以它对CDI的教职也有它的优势：（1） 有启动研究基金，可以入职的时候招2个博士生。这个要说明，在法国招博士生是很难的，要有经费，我看到很多Chargé de recherche到6-7年都没有一个博士生的。（2）拿到HDR之后，可以直接有Directeur de recherche或professeur的岗位的，这条很关键，因为在法国有很多人有HDR，但是一直还是Chargé de recherche或Enseignant-chercheur的。 . 这个岗位提交材料准备相对Chargé de recherche简单一些，网站9上有个表和研究与教学计划，就可以提交了。对于研究计划和教学计划要跟fichie de poste(岗位介绍)中的联系人咨询，而且要求很短，研究计划3页内(比Chargé de recherche的15页少很多)，其实就是自己想做啥，其他的啥都写不了；教学计划2页内。 . 提交材料之后，大概半个月会有通知面试，这个面试是有一些特点的，因为其实Directeur de recherche junior的岗位要求是比Chargé de recherche要求高的，在法国，毕竟3-6年要拿到HDR是很难的，因此一般都是做了几年的博士后申请的，而Chargé de recherche是博士毕业就可以申请了，很多都法国博士一毕业就拿到了Chargé de recherche的。 . 面试时间是1个小时：10分钟介绍自己和研究计划，5分钟一个上课的演示，注意上课演示的slide只有一页。然后就是45分钟的回答问题，根据我的经历，由于大家都做研究很久了，反而研究上的问题少，而指导学生的问题多(由于这个是研究岗，如果是大学的话，可能是教学了)。因为在法国，博士后临时工是没有资格申请项目的，所以大家也不会问这个经历。 . 这个过程中的经验： . （1）jury有6个人左右，还有有一个非法国人，我面试时是Christian Heipke，然后本单位2个人，其他就是其他单位了。我面试时jury是我们的école的directeur(校长)，很多人都是这个专业的人，我导师告诉我5个人是他认识的。 . （2）单位的人不会透露你竞争对象是谁，这个印象很深刻。他们好像怕你知道似的，让你在一个办公室等，一直等面试的人走了，才让你出来去面试的办公室。 . （3）面试中指导学生的问题很多，我记得有2个jury提的问题跟这个有关，Christian Heipke问了好几个这个问题，我发现他确实很nice，所以怎么带学生这个问题要多思考。 . （4）由于有一个非法国人，因此面试要用英语，当然在上课演示可以用法语，应该建议用英语的。 . （5）上课的模拟也是很关键的，邮件中有说明，貌似获得岗位之后，有一个课程就是这个内容，大概5周，每周3h，对应的法国的是cours。所以这个5分钟是一个课程内容和计划。 . 最后的结果是打电话通知的，没有排名，估计是和申请者敲定之后才通知我没有被选择。从跟实验室的leader聊天的过程，他告诉我，那个申请者已经是maître de conférence，他有项目，有学生，因此他们觉得他比我更容易获得HDR。至于别人为啥要抛弃fonctionnaire来竞争tenure track，是因为他们maître de conférence一年有192h的教学任务，而Directeur de recherche junior只有64h的教学任务，而且别人相信自己3-5年可以获得HDR。这也是为啥很多Enseignant-chercheur很多最后都变成了纯的Enseignant，可能那么多教学之后，就没有多少精力去做研究了。 . 最后希望自己的经历能给大家一些帮助。 . Enseignant-chercheur(CDI) . 并不是所有的Enseignant-chercheur都是通过GALAXIE6 (大学)招的，也有école自己在自己的网站上招聘的。注意，在法国大学一般都是几个école组成的，我想是因为针对排名想出来的办法，école对应以前的工程师学校。对法国的科研岗位了解后，感觉我可能不太适合Enseignant-chercheur的岗位，就只在最相关的方向投了2个岗位。 . 在2023年3月，我无意看到一个学校招聘的方向和我的背景还有一些相似，当时也没有报太大的指望，就投了。跟其中一个人(研究组leader)联系的过程中，发现他们对教学很看重，那个人建议我去做一个presentation，然后好讨论怎么写材料。由于我当时在准备Chargé de recherche的材料，本来没有多少精力去准备，所以就没有去做presentation。 . Enseignant-chercheur准备的材料和Chargé de recherche的材料基本差不多，就是研究经历、文章、教学等，在加上研究计划和教学计划，当然关键的是教学经历和教学计划。 . 在6月初，其中一个回复说，因为申请者太少了，所以就不招了。对另一个岗位，一直没有消息，我最后就问了一下他们，他们的回复说他们选择另外一个人，那个让的教学经历更丰富。 . 这个过程中，我才知道，在法国有普通的博士生合同中有上课时间，有 chargé d’enseignement vacataire10，还有一种ATER11，类是CDD的Enseignant-chercheur，一年192h的教学任务，它跟maître de conférence一起开始招聘，通过这个可以增加教学经验。同时，有的学校还有CDD的全职Enseignant，这样也可以提高教学经验。虽然ATER可以增加教学经验，但是教学经验只是必要条件，也有做过ATER也找不到Enseignant-chercheur岗位的。 . 由于maître de conférence需要通过qualification7，我错过了2023年的材料提交时间，因此我没有资格通过大学的招聘。我打算2024年把材料提交上去，等我通过之后，我将会详细写一下怎么申请qualification。 . 结束语 . 之所以把这段话放到最后，是不想浪费大家的时间。由于自己性格上的问题，当时其实在国内已经在做博后了，明白国内的科研环境对自己也很不利，所以在毅然选择出国，尤其到了法国一个完全陌生的国家。当时还不知道大家不讲英语(博后导师是一个乐观的人，跟我说不说英语在法国也可以)，而我到法国时，连bonjour都不会说。由于自身的条件(国内的博士等)和法语的因素，让我在回国和留在这边思考了很久，最后才下定决心好好学法语留下。中间由于covid，又缺乏语言环境，因此，即使接近5年，法语还是没能让人满意。 . 由于我是直博，在众多横向项目中，锻炼出了对专业中流程的大部分都很熟悉，后来发现，这样的背景比较适合目前的研究所，他们也希望有更多经验的人。在第二个合同开始后，导师流露出想留我的意思，也增加了我在整个申请过程中的信心。 . 当然，经过这些失败，我自己觉得自己有一些问题，因为我说话有口吃，尤其在紧张时明显，在加上英语和法语不是母语，就更明显了。虽然在presentation阶段因为准备充分，没有问题，但是回答问题阶段，问题就暴露出来了，再加上法语我也很不熟练，因此在Chargé de recherche的concours中没成功(单位的一个旁听者的意见)。第二次面试是Directeur de recherche junior，有了第一次的经验之后，我感觉紧张少了一些，我在面试中开始开始观察jury的表情，这个里我想说的是，多次练习面试也可以提高的表现的，即使对于口吃的人。 . 后来导师给出了解决办法(主要是école的directeur是我的一个面试的jury，他也是提出解决办法的人)，还是留下来了，不过在我的心中有一种很难用言语说出来的滋味，感觉不是靠自己获得的。考虑我跟另外一个导师的一次对话，他告诉我由于经济原因，目前研究所只有人退休才会有新的人进来，最近几年有可能没有新的岗位，因此最后接受导师的好意，心存感激。 . 还有一点，最好不要在6月合同结束的时候还没找到下家，因为我是今年上半年在忙申请岗位的事情，而且导师说我的proposal写的挺好的，所以我当时就没仔细去找下家，后来发现两个岗位都没上，就失业在家了。而且新的岗位又是临时想出来的岗位，因此中间等了好几个月。在得到消息之前，我尝试去找，由于家庭原因，在巴黎这个区域真是很难找到，而且7-8月法国人基本都不上班了，发邮件很少有回复，可能大家放假回来之后觉得这个邮件太久了，所以就不回复了。后来听说，要到9-10月才是博士后岗位出来的高峰。 . 参考 . https://www.enseignementsup-recherche.gouv.fr/fr/les-personnels-de-la-recherche-46556 &#8617; . | https://www.cnrs.fr/fr/concours-ch &#8617; . | https://www.cnrs.fr/fr/concours-it &#8617; . | https://www.cea.fr/recrutement/ &#8617; . | https://www.onera.fr/fr/recherche-onera &#8617; . | https://www.galaxie.enseignementsup-recherche.gouv.fr/ensup/candidats.html &#8617; &#8617;2 . | https://www.galaxie.enseignementsup-recherche.gouv.fr/ensup/cand_qualification_droit_commun.htm &#8617; &#8617;2 . | https://www.concours.developpement-durable.gouv.fr/charge-e-de-recherche-du-developpement-durable-de-a126.html &#8617; . | https://www.galaxie.enseignementsup-recherche.gouv.fr/ensup/cand_CPJ.htm &#8617; &#8617;2 . | https://www.galaxie.enseignementsup-recherche.gouv.fr/ensup/etab_autres_contractuels_ES.htm &#8617; . | https://www.education.gouv.fr/attache-temporaire-d-enseignement-et-de-recherche-ater-12767 &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2023/09/05/concours.html",
            "relUrl": "/markdown/2023/09/05/concours.html",
            "date": " • Sep 5, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Visualization",
            "content": "Visualization . A picture is worth a thousand words12。 . tSNE是一个显示工具，可以参考论文3。 . 深度学习中的数据的相似性是很关键，对于transfer learning 或者domain adaption显得比较关键。发现tSNE4是一个显示多维特征的工具，是基于最小 Kullback-Leibler divergence5的降维工具，通常与PCA6进行比较7。对于Curse of Dimensionality，当维数太大，会有问题8。 . Kullback-Leibler divergence . KL divergence可以看作是描述两组数据的分布的一致性，有点类似与互信息（MI）9，但是MI与KL divergence并不等价10，有点类似于表达两个分布的差异，而且结果是非对称的11。 . 另外，KL divergence可以作为目标函数12，在pytorch中有实现13。 . tSNE . tSNE 主要是多维特征的显示7，利用KL divergence作为目标函数，用 stochastic gradient descent进行优化8，而且可能多次运行的结果并不一样14。 . 网上有一个GUI的例子，显示迭代次数与显示结果的关系14。 . Feature visualization . 对于CNN中间layer的分析，发现CNN有translationally invariant，但是没有rotationally invariant15。有对应的基于pytorch的代码16。同时，在pytorch的forum上也有学多feature visualization的讨论17。 . 常用的做法都是用hook函数，直接显示layer的output18。 . Footnotes . https://en.wikipedia.org/wiki/A_picture_is_worth_a_thousand_words. &#8617; . | https://towardsdatascience.com/the-art-of-effective-visualization-of-multi-dimensional-data-6c7202990c57. &#8617; . | https://lvdmaaten.github.io/tsne/. &#8617; . | https://scikit-learn.org/stable/modules/generated/sklearn.manifold.TSNE.html. &#8617; . | https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence. &#8617; . | https://en.wikipedia.org/wiki/Principal_component_analysis. &#8617; . | https://medium.com/analytics-vidhya/note-visualize-multi-dimension-datasets-in-a-2d-graph-using-t-sne-airbnb-bookings-dataset-as-824541cc5388. &#8617; &#8617;2 . | https://jotterbach.github.io/content/posts/tsne/2016-05-23-TSNE/. &#8617; &#8617;2 . | http://www.scholarpedia.org/article/Mutual_information. &#8617; . | https://stats.stackexchange.com/questions/487012/are-mutual-information-and-kullback-leibler-divergence-equivalent. &#8617; . | https://zhuanlan.zhihu.com/p/425693597. &#8617; . | https://timvieira.github.io/blog/post/2014/10/06/kl-divergence-as-an-objective-function/. &#8617; . | https://pytorch.org/docs/stable/generated/torch.nn.KLDivLoss.html. &#8617; . | https://distill.pub/2016/misread-tsne/. &#8617; &#8617;2 . | https://towardsdatascience.com/how-to-visualize-convolutional-features-in-40-lines-of-code-70b7d87b0030. &#8617; . | https://github.com/fg91/visualizing-cnn-feature-maps. &#8617; . | https://discuss.pytorch.org/t/visualize-feature-map/29597. &#8617; . | https://github.com/lewis-morris/mapextrackt. &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/09/05/tSNE.html",
            "relUrl": "/markdown/2022/09/05/tSNE.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "LiDAR and Image in 3D",
            "content": "LiDAR and Image in 3D . LiDAR与image的同时的应用越来越多，很多设备都同时有LiDAR和camera： . . 4D-Net . 4D-Net for Learned Multi-Modal Alignment用原始的point cloud和image进行训练，获得3D box，比原来把piont cloud转化为map更好一些。 . Lidar-Camera Deep Fusion . 感觉有个很大的问题是解决Alignment的不一致的问题。 .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/08/05/LiDAR-and-Image.html",
            "relUrl": "/markdown/2022/08/05/LiDAR-and-Image.html",
            "date": " • Aug 5, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Transfer learning in Deep learning",
            "content": "Transfer learning in Deep learning . 由于loss的非凸性、type的不同，造成Transfer learning在不同的数据、task上表现并没有规律性。 . . The Visual Task Adaptation Benchmark . VTAB基于多种数据、多种任务之间的Transfer learning。 . 当数据量增加的时候，从scratch训练，不会有performance的损失。 . . Pretained models . 不能想当然的认为pretained models是有用的，参考1，主要的问题有： . 不同的task . | 数据有很大的difference，如果不能share feature，那么不会有什么好处 . | pretained models是local optima，所以会有bias . | 当然，也可以用pretained models做初始值，最后的结果基本也会差不多2。也有文章证明即使是training from scratch3，结果也不会差很多4。 . Footnotes . https://news.ycombinator.com/item?id=33067056. &#8617; . | https://stackoverflow.com/questions/65982245/pretrained-model-or-training-from-scratch-for-object-detection. &#8617; . | https://arxiv.org/abs/1811.08883. &#8617; . | https://heartbeat.comet.ml/pre-trained-machine-learning-models-vs-models-trained-from-scratch-63e079ed648f. &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/08/04/transfer-learning.html",
            "relUrl": "/markdown/2022/08/04/transfer-learning.html",
            "date": " • Aug 4, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Micmac tools in photogrammetry",
            "content": "Micmac tools in photogrammetry . Micmac 1 是一个摄影测量的开源工具，是基于C++的，可以在Windows和Linux/MacOS X 上运行，由于开发的人主要是Ubuntu，建议在Ubuntu下用。 . Micmac的功能与Colmap2 类似，但是在处理卫星影像数据时，优势是很大的。虽然也有把卫星影像转成Colmap可以处理的类型 3，Micmac的功能更全，包括Crop、RPC的转换等。 . build(编译) . 建议在Ubuntu下编译4，基本不会有配置、运行、编译等错误。 . git clone https://github.com/micmacIGN/micmac.git cd micmac/ mkdir build cd build cmake -DWITH_QT5=1 -DWITH_CPP11=1 .. make install -j4 sudo gedit /etc/bash.bashrc export PATH=/micmac_install_directory/micmac/bin:$PATH . Aerial image(航空影像) . 这里的航空影像是指的框幅影像或者叫小孔成像5，对于普通的相机拍摄的都可以处理。之前Github 6上已经写了一个详细的流程可以参考。 . 在Ubuntu下面显示界面很少， 不过Micmac中有一些显示工具，可以显示影像和输出的结果。 . Vino . Vino是显示影像的模块： . Vino Crop-IMG_PHR1B.tif . 显示Feature point . 可以用SEL这个工具显示： . SEL ./ im0.png im1.png KH=NT . 写有基于python与wxpython7的工具，是基于keypointgui 8开发的，可以支持Micmac的文本和二进制格式 9 ： . . 显示Epipolar . 核线影像是否没有上下视差受影像的姿态精度决定的，也影响后面密集匹配的结果。 . 写有一个基于C++与QT的工具 10，可以显示红/绿映像： . . 显示空三结果 . 最后显示结果可以用AperiCloud输出结果： . AperiCloud &quot;.*tif&quot; Ori-Compense . Satellite image(卫星影像) . 对于卫星影像，由于很多用RPC作为参数，因此和航空影像的处理有一些区别，有一个详细的流程介绍了卫星影像的处理 11 。 . 卫星影像处理除了参数与航空影像不一样之外，内部的原理其实是一致的，因此显示工具基本是可以通用的。 . Crop . Crop是一个很好的工具，当我们要处理一部分数据，可以减少处理时间，可以用命令： . mm3d SateLib CropRPC Ori-satRPC/GB-Orientation-19DEC15WV031000015DEC19142039-P1BS-500514410020_01_P001_________AAE_0AAAAABPABW0.tif.xml Ori-satRPC/GB-Orientation-*.xml BenchMark Org=[2887,13794] Sz=[13489,34373] . Footnotes . https://github.com/micmacIGN/micmac. &#8617; . | https://github.com/colmap/colmap. &#8617; . | https://github.com/Kai-46/ColmapForVisSat. &#8617; . | https://micmac.ensg.eu/index.php/Install_MicMac_Ubuntu. &#8617; . | https://zh.wikipedia.org/wiki/%E9%87%9D%E5%AD%94%E7%9B%B8%E6%A9%9F. &#8617; . | https://github.com/whuwuteng/EuroSDR_UAV_Micmac. &#8617; . | https://www.wxpython.org/. &#8617; . | https://github.com/Kitware/keypointgui. &#8617; . | https://github.com/whuwuteng/keypointgui. &#8617; . | https://github.com/whuwuteng/Stereo_Show. &#8617; . | https://erupnik.github.io/blog/jupyter/2021/05/04/_05_03_satellite_basic_hide.html. &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/07/31/micmac.html",
            "relUrl": "/markdown/2022/07/31/micmac.html",
            "date": " • Jul 31, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Parallel in Deep learning",
            "content": "Parallel in Deep learning . 在cluster上用多个GPU进行训练，减少训练的时间；另外随着batch Size 增加，需要的内存也越来越大，在一块GPU上不能进行训练，因此如何用多个GPU进行训练也是一个需求。 . DataParallel in Pytorch . 虽然DataParallel不被推荐使用，即使是在一个node中1，但是因为DistributedDataParallel有一些问题，如windows不支持，所以DataParallel还是可以用的2。 . 不推荐的主要原因是由于模型要在多个node中复制。 . 另外的还有mp.spawn来做并行，感觉需要的代码更多3。 . DistributedDataParallel in Pytorch . DistributedDataParallel 是只用Pytorch的基础上利用较多的，目前很多这样的博客，缺点就是配置起来比较困难4，具体的可以参考blog5。 . Pytorch Lightning . 是独立于Pytorch的一个库6，因此对于分布配置时并不用考虑，可以直接从pytorch的模型到pytorch lightning7。 . Horovod . Horovod8 可以认为是一个分布式训练的框架，可以支持多种工具，如TensorFlow, Keras, PyTorch, and Apache MXNet。 目前在Pytorch Lightning中，也可以支持Horovod9，对于pytorch，也可以自己配置10。 . Batch size . Batch size 是一个重要的问题，因为batch size的大小影响训练的精度，实际上的batch size是多少跟采用哪种并行方式有关，可以参考视频中的计算方式2。 . 考虑到Batch size 的变化，learning rate也需要跟着变化，要不然用DDP的accuracy会降低11。 . Footnotes . https://pytorch.org/docs/stable/generated/torch.nn.DataParallel.html. &#8617; . | https://www.youtube.com/watch?v=a6_pY9WwqdQ. &#8617; &#8617;2 . | https://zhuanlan.zhihu.com/p/336863012. &#8617; . | https://zhuanlan.zhihu.com/p/206467852. &#8617; . | https://shomy.top/2022/01/05/torch-ddp-intro/. &#8617; . | https://zhuanlan.zhihu.com/p/319810661. &#8617; . | https://www.youtube.com/watch?v=DbESHcCoWbM&amp;t=1678s. &#8617; . | https://github.com/horovod/horovod. &#8617; . | https://horovod.readthedocs.io/en/stable/pytorch.html. &#8617; . | https://zhuanlan.zhihu.com/p/264778072. &#8617; . | https://discuss.pytorch.org/t/should-we-split-batch-size-according-to-ngpu-per-node-when-distributeddataparallel/72769/6. &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/06/25/parallel.html",
            "relUrl": "/markdown/2022/06/25/parallel.html",
            "date": " • Jun 25, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Hyperparameters in Deep learning",
            "content": "Hyperparameters in Deep learning . 深度学习中的hyperparameters(超参数)很多，有时候对结果的影响还挺大的，根据数据的不同、模型的不同会有比较大的区别，下面只是记录一些关于这的blog的内容。 . Batch Size . Batch Size 是很关键的一个参数，因为它影响利用的内存、每epoch的时间等 1，相同的epoch，steps（iteration）的次数也不同。在比较大的Batch Size时，learning rate同时增加，学习结果最好。 . Upsampling . Footnotes . https://medium.com/mini-distill/effect-of-batch-size-on-training-dynamics-21c14f7a716e . &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/03/24/hyperparameters.html",
            "relUrl": "/markdown/2022/03/24/hyperparameters.html",
            "date": " • Mar 24, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "3D point cloud and Mesh Software",
            "content": "3D point cloud and Mesh Software . 主要是介绍一些3D point cloud与Mesh 相关的软件，主要是软件、功能也很多，有利于以后查找。 . Open Source . Open Source主要是以C++为主，随着python的流行，后来也有很多基于python的库。 . CGAL . CGAL 是目前处理point cloud 和 Mesh首推的库，功能很多，包括点云处理（法向量估计，KD-Tree等）、Mesh处理（重建、平滑、距离查询等），也有GUI的界面，可以跟Meshlab一样的使用。 . 在二次开发上，由于都是基于模板类的C++，因此扩展性也是很强的。 . libigl . libigl 更多的偏向计算机图形学，因此有很多geometry computational、differential geometry的东西，它也有很多接口是基于CGAL的开发。 . OpenMesh . OpenMesh早期是基于C++开发的，目前有了python的接口，感觉优势是处理polygonal mesh，而不是triangle based mesh。 . geogram . geogram 也是基于C++的开源库，主要是计算图形学(geometry computational、differential geometry)的算法。 . Gmsh与pygmsh . Gmsh 是一个基于C++开发的，主要是CAD相关的模型后处理，如reparametrization、remeshing等，偏计算机图形学。 . MeshLab . MeshLab 是开源的，是基于C++的，目前的大都是基于GUI的使用，尤其在Ubuntu下面，是一个很好的显示软件。 . MEPP . MEEP是一个mesh处理的开源库，功能上有点类似MeshLab，也是基于C++的。 . TetGen与Triangle . TetGen是基于C++开发的，功能主要是3DT 与CDT，Triangle也是基于C++的，主要是2DT, 虽然这些功能很简单，包含在CGAL里面，但是速度快和数据结构比CGAL简单，用的很广泛。 . Fade2D与Fade3D . Fade2D 与Traingle的功能类似，Fade3D 与TetGen类似，不过没有源代码，但是可以基于开源的lib进行开发。 . VTK与PyVista . VTK是基于C++开发的，由于包括影像处理与图形处理， 因此应用的比较广泛，如Kinect的开发包就利用了VTK。 . PyVista是基于VTK的python的接口。 . ParaView . ParaView 是基于C++开发的，发现显示线与mesh很方便，比MeshLab显示线的效果更好一些。 . CloudCompare . CloudCompare 是基于C++的开源库，主要是点云处理，在Ubuntu下面是比较好的显示工具，支持的数据格式也比较多，有一个比较有意思的地方是支持命令行处理 1。 . Easy3D . Easy3D也是C++开源的，主要是3D Vision数据的显示，如Keyframe animation的功能就是很好的展示功能，类似飞行模式2 。 . PCL . PCL是一个基于C++的开源库，代码实现比CGAL友好，安装简单一些，因此用的非常广泛，对于小的数据量还行，因此做实验还可以。 . Open3D . Open3D更多的是一个算法库，主要是点云处理，早期是基于C++开发，现在基于python的接口做的很好。 . LAStools . LAStools 是基于C++的库，主要是实现LAS file的读写。 . PyMesh . 是基于python的Mesh处理的库，比Python based Open3D简洁。 . meshio . 是基于python的Mesh读写库，支持mesh的各种格式。 . potree . 基于web显示点云， 有很多例子，同时也有python接口。 . F3D . 开源的跨平台的mesh显示工具。 . Point Processing Toolkit . Point Processing Toolkit (pptk) 是基于python的显示2D/3D点云的工具，有个技术性的文档介绍。 . laspy . laspy是一个基于python的读写LAS/LAZ文件的开源库。 . PDAL . PDAL是一个基于C++的处理点云数据的开源库，提供python接口。 . pyntcloud . pyntcloud 是一个基于python的点云处理库。 . Other . 这下面主要是商业软件，很多都是处理整个流程的。 . Geomagic Wrap . Geomagic Wrap 可以实现点云到Mesh，主要是显示效果很厉害 3。 . FugroViewer . FugroViewer 只能在windows中用，能显示很大的点云数据，操作起来比CloudCompare方便。 . ArcGIS 3D . ArcGIS也是windows中用的显示3D模型很好的工具。 . RhinoCity . 处理LiDAR数据的一家公司，还做城市的solar energy。 . Footnotes . https://www.cloudcompare.org/doc/wiki/index.php?title=Command_line_mode . &#8617; . | https://www.youtube.com/watch?v=ST7QWXzez2E&amp;list=PLzcbdLuSRF1PSqnycLzDsn3qG1W63bva7. &#8617; . | https://zhuanlan.zhihu.com/p/364552330 . &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/03/23/3D-software.html",
            "relUrl": "/markdown/2022/03/23/3D-software.html",
            "date": " • Mar 23, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "RMSprop 与 Adam",
            "content": "RMSprop 与 Adam . 深度学习中的optimizer有许多算法，如SGD ，RMSprop, Adam等12。 . 目前没看到说那个算法就是比其他的都好的说法，大部分都是直接用Adam，只是最近发现了用RMSprop比Adam的效果好，引发了我对这个思考，因为optimizer同时有对learning rate的依赖，具体是因素的主要作用只能用实验来说明。 . 具体的公式可以在网上查找，下面只写一些blog的观点。 . Adam . Adam 几乎是在Deep learning中用的最多的 3。 . Adam训练的结果比SGD权重更大，可能导致test loss 更小，但是generalize（泛化）没有SGD好4。 . RMSprop . RMSprop 是 Geoff Hinton 提出的 5 ，如何实现RMSprop可以参考 6 。 . Comparison . Reinforcement learning中用RMSprop而不用Adam 7，解释是RMSprop is suitable for sparse problems。 | 有一个例子出现RMSprop的结果优于Adam 8 。 | 甚至有的情况下出现SGD要优于其他的optimizer 9 。 | Footnotes . https://zhuanlan.zhihu.com/p/32488889 . &#8617; . | https://ruder.io/optimizing-gradient-descent/ . &#8617; . | https://towardsdatascience.com/adam-latest-trends-in-deep-learning-optimization-6be9a291375c . &#8617; . | https://medium.com/mini-distill/effect-of-batch-size-on-training-dynamics-21c14f7a716e . &#8617; . | http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf . &#8617; . | https://machinelearningmastery.com/gradient-descent-with-rmsprop-from-scratch/ . &#8617; . | https://stats.stackexchange.com/questions/435735/advantage-of-rmsprop-over-adam . &#8617; . | https://medium.com/analytics-vidhya/a-complete-guide-to-adam-and-rmsprop-optimizer-75f4502d83be . &#8617; . | https://shaoanlu.wordpress.com/2017/05/29/sgd-all-which-one-is-the-best-optimizer-dogs-vs-cats-toy-experiment/ . &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2022/03/20/optimizer.html",
            "relUrl": "/markdown/2022/03/20/optimizer.html",
            "date": " • Mar 20, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "《活力》经济学的书",
            "content": "阅读《活力》 . 介绍 . 这本书是一个本经济学方面的书，参考内容介绍。主要感觉是介绍西方国家和日本的经济发展因素相关的问题，印象深刻的方面如创始人对公司的影响、母国对移民后代的影响、社会对创业失败的包容性、机器等人工智能对工资的影响等。 . 总体感觉是一本比较专业的书，有点类似多篇论文通过章节合并的书，有很多公式来说明影响经济发展的因素。 . 摘录 . 创新者喜欢工作的回报属性,愿意在具有创造性的行业工作,并且重视财务独立。创新者往往喜欢不确定性,并乐于冒险。他们也能够接受失败。 . | 我们发现在有增加型机器人时,最初等于零的消费增长率也会变为正值。沿着这条路径,受到比物 质资本折旧速度更快的资本积累推动,人均消费会不断上升。在这条均衡增长路径上,总的非人力财富会与人均消费以同样的速度增长,同时传统机器和增加型机器人的份额不变。然而,我们得到的一个严峻的结果是,真实工资被永久性地压低了,(人类)劳动力在国民收入中的份额渐近于零,尽管总的(人类和机器人)劳动力在国民收入中的份额在长期趋向于一个正的常数。 . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/09/26/dynamism.html",
            "relUrl": "/markdown/2021/09/26/dynamism.html",
            "date": " • Sep 26, 2021"
        }
        
    
  
    
        ,"post14": {
            "title": "Google AI blog summary series",
            "content": "Goole AI blog summary series 分析 . 介绍 . Google AI blog 貌似最近几年有总结和展望，有利于了解Deep learning的工作和趋势： . 2020年 . | 2019年 . | 2018年 . | 2017年 part1 和2017年 part2 . | 2016年 . | . 记录 . 2016年还是数据驱动的一年，主要是依赖大数据的算法与tensorflow的介绍。 . 2017年AutoML才开始流行。 . 2018年中就有Computational Photography在夜景拍摄照片和深度图的研究，同时还有很多数据集，如Open Images V4。 . 2019年的总结写的比较成熟了，也有很多应用，如Lookout ，Google Translate’s camera translation和Live Transcribe ；有学术研究，如 Activation Atlases， Partial Differential Equations等。 . 2020年的总结了工作的领域： . COVID-19 and Health | AutoML | ML for Medical Diagnostics | Understanding ML Algorithms and Models | Weather, Environment and Climate Change | Algorithmic Foundations and Theory | Accessibility | Machine Perception | Applications of ML to Other Fields | Robotics | Responsible AI | Quantum Computing | Natural Language Understanding | Supporting Developers and Researchers | Language Translation | Open Datasets and Dataset Search | Machine Learning Algorithms | Research Community Interaction | Reinforcement Learning | . 比较有特点的工作，如 NeRF， Learning to Factorize and Relight a City等。 . Google Blog . Google Live View | . 有点类似与之前的VPS的功能，就是根据Video进行navigation。 .",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/09/12/series.html",
            "relUrl": "/markdown/2021/09/12/series.html",
            "date": " • Sep 12, 2021"
        }
        
    
  
    
        ,"post15": {
            "title": "记录一些电脑的trick",
            "content": "记录一些电脑的trick . 内容 . (1) Thinkpad 用HDMI连显示器，显示器无信号(确认显示器和线没有问题) . 解决：笔记本有静电 拔掉电源，电池，鼠标等线，然后按开机几次就可以 。1 . (2) 一个不错的blog框架，可以参考源码。 . (3) 双硬盘装Ubuntu的问题 . 尝试装20.04时，出现了 “executing grub-install /dev/sda failed”的问题 当不管这个问题时，进入grub之后出现 file ‘/grub/i386-pc/normal.mod’ not found的问题，尝试用18.04也有一样的问题，发现是因为系统安装在/dev/sdb，最后安装在/dev/sda上（参考），就有引导了，而且出现两个系统。 . (4) Ubuntu18.04台式机安装wifi . 目前用的是brostrend ac1200 wifi, 下载的驱动是在Github的，命令行很简单： . make # this is important sudo modprobe cfg80211 sudo insmod 88x2bu.ko . 在这个过程中，发现插入USB3.0时没反应，用USB2.0就没有问题。 . 在使用的过程中，内核升级需要重新编译： . make clean make sudo modprobe cfg80211 sudo insmod 88x2bu.ko . (5) Unbuntu 18.04 安装NIVDIA显卡驱动 . 如果不知道显卡型号，需要用命令： . ubuntu-drivers devices . 然后在官网上下载对应的型号的驱动，安装步骤参见第三种。 . sudo dpkg --add-architecture i386 sudo apt update sudo apt install build-essential libc6:i386 sudo bash -c &quot;echo blacklist nouveau &gt; /etc/modprobe.d/blacklist-nvidia-nouveau.conf&quot; sudo bash -c &quot;echo options nouveau modeset=0 &gt;&gt; /etc/modprobe.d/blacklist-nvidia-nouveau.conf&quot; # check cat /etc/modprobe.d/blacklist-nvidia-nouveau.conf . 重启之后sudo telinit 3。然后按快捷键：CTRL+ALT+F1 进入字符界面，注意是sudo bash NVIDIA-Linux-x86_xx.sh。 . 在使用的过程中，会出现内核升级，发现内核升级之后显卡的驱动会失效，所以要禁用Ubuntu的自动升级。不过目前不太确定这个内核升级影响有多大，在Ubuntu16.04的系统和另在一台Ubuntu18.04的系统下，没有禁用升级，显卡也没有失效。 . 不过安装NVIDIA Drive会给安装CUDA带来问题，参考blog， 因该意思是要重新安装CUDA的驱动，应为CUDA会带有NVIDIA的drive。有两种办法解决问题： . a. 先卸载NVIDIA Drive，然后安装CUDA，参考blog1 和 blog2。 . b. 不安装CUDA自带的Drive。 . 之后之安装cudnn，参考blog。 . Footnotes . https://www.zhihu.com/question/273905971 &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/09/01/tricks.html",
            "relUrl": "/markdown/2021/09/01/tricks.html",
            "date": " • Sep 1, 2021"
        }
        
    
  
    
        ,"post16": {
            "title": "吴军博士的书",
            "content": "阅读《格局》 . 介绍 . 《格局》是吴军博士的一本书，吴军博士有很多书，如读过的《浪潮之巅》、《数学之美》、《文明之光》等，感觉还不错。 . 这本书总的说来还给人很多启发的，虽然上面的有关商业的比较多，但是对于人生的发展、工作的发展有很多指导意义。 . 摘录 . (1) 而当明确了位置和方向后，格局的大小就要看采取行动的方式。在这一点上，格局大的人追求的是重复的成功和可叠加式的进步，格局小的人满足于自己某件事做得快、做得漂亮。 . (2) 很多人担心学计算机专业将来只能吃青春饭，其实，这只反映出那些没有护城河的从业者的现状，因为那些从业者可以随时被替代。但是，少数经验不断积累的从业者如今非常稀缺，无论他们开什么价，都有人愿意请他们做事情。 . (3) 现在的很多人（包括一些科技从业者）混淆了技术在目的和手段之间应有的位置。技术从来都是手段而不是目的，搞不清楚这一点，就会为了技术而研发技术。很多时候，我们知道一个需求可能是刚需，但是这个需求的解决方案（技术）并不一^定是刚需，用其他手段也能解决问题，甚至解决得更好。当我们混淆了手段和目的时，就难免闹笑话。 . (4) 生活中最重要的是掌握好节奏。人在忙碌的时候，很容易忘掉忙碌的目的，最后反而离目标越来越远。从忙乱 中退一步，思考一下目的，能省掉多余的需求和行动，减少不必要的麻烦，让我们更快地接近目标。 . 阅读《态度》 . 介绍 . 《态度》这一本书主要是通过与女儿写信的方式，表达作者的观点，还是有很多值得读的。 . 摘录 . (1) 服从是训练领导力的第一步，但也仅仅是第一步，因为仅服从，只懂得对上负责，是无法成为领导的。第二步就是合作。对于合作者一定要在公共场合认可他们的贡献，这一点非常重要。这样合作者就会想，即使我不当领导，他也会为我争取所有荣誉和利益，因此接受他的领导对我来讲是有好处的。培养领导力的第三步是给领导当好助手。世界上能力再强的人也不可能事必躬亲，领导也是如此，他们需要好的助手。 . (2) 人一辈子，不可能凡事都顺利，总会遇到很多不尽如人意的事情，甚至遇到一些悲 剧。但是，人不要抱怨，要主动想想是否有更好的方法，然后行动起来。休伯说，遇事不要逃避，问问自己是否有比逃避更好的方法，能否做点什么，解决问题，哪怕是解决一部分问题。 . (3) 年轻人在做任何决定之前应该做好准备，三思而行，但是对于想清楚的事情，做起来就不要犹豫。很多事情你在做成之后，回过头来看成功的概率不过5％甚至更低。如果你在做之前就开始算概率，很多事根本不会开始做。年轻人和老年人的一个差别在于，前者很多时候不知艰难，努力去做了，也就做成了，而后者因为有过失败的教训，知道一件事不是那么容易做成，想想做成的可能性，算算成本，还没有开始，就已经放弃了。努力 了，至少还有一个希望；放弃了，则永远不可能有希望。 . (4) 最后，我想和你说的是，千万不要把科学当成宗教。你可能会说：“它们怎么可能被混淆呢？它们完全不同啊！”事实上，很多半瓶子醋的科技工作者和学生对待科学的态度和教徒对待宗教没有什么不同。宗教的三个特点在他们身上都能看到。一是盲从，对科学结论的盲从。二是道德优越感，觉得自己是搞科学的就看不起别人。三是喜欢相信书本上的教条和权威人士给出的结论。这些是教徒的习惯，但是你肯定能在一些自诩为搞科学的人身上看到，这偏离了科学的根本。希望你不要染上类似的习气，做一个理性的怀疑者， 一个对未知的探索者。 . (5) 人们通常对科学的一个误解就是把它等同于正确，把正确等同于有用。很显然，正确不等于有用。如果你说明天要么下雨，要么不下雨，这当然正确，但是毫无用途。类似 地，正确和科学也不能画等号。牛顿的万有引力定律在宇宙的尺度上并不正确，或者说不 . 准确，但这并不能否定它的科学性。类似地，一个巫医通过烧香治好一个绝症患者的病， 并非他的做法就有科学性。科学是方法和过程，相信你对于这一点的体会会越来越深。 其次，科学是不断发展的，没有绝对正确和绝对真理。 既然科学是一个人认识世界的过程，随着我们对世界认识的加深，就会发现之前的一些认识可能是肤浅的。因此，真正有学识的科学家总是对世界和世界的规律充满敬畏，而不会说他们代表正确，只有宗教人士才会说他们手里握有绝对真理。 如果你认可了这个道理，我们再往前走一步，就能得到这样一个结论：科学家并不高人一等，也并不比别人更接近真理，因为真理是客观存在的，一个人并不会因为学历高、职位高就能更接近真理。 . (6) 与人沟通，切忌啰唆。很多人认为，自己讲的越多，对方接收的信息也越多。其实， 如果废话太多，对方根本搞不清你要说什么，沟通的效果为零。更何况在通信中，多少会有点儿噪声，话多了，难免词不达意，让人误解，这就是噪声。任何好的沟通，需要清楚对方是谁，用什么样的一两句话能够让对方理解你的意图。 . 阅读《见识》 . 介绍 . 看到一个人对见识总结的不错1，如下: . . https://www.zhihu.com/question/265999029/answer/748446004 &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/08/21/altitude.html",
            "relUrl": "/markdown/2021/08/21/altitude.html",
            "date": " • Aug 21, 2021"
        }
        
    
  
    
        ,"post17": {
            "title": "一些blog的记录",
            "content": "记录一些blog的内容 . 内容 . (1) 技术型创业者需要从你们博士的躯壳里走出来，开始谦卑地学习客户永远是对的。1 . Footnotes . 李开复 https://weibo.com/ttarticle/p/show?id=2309404281740599412204 . &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/08/15/blog.html",
            "relUrl": "/markdown/2021/08/15/blog.html",
            "date": " • Aug 15, 2021"
        }
        
    
  
    
        ,"post18": {
            "title": "Some good blogs on Deep learning",
            "content": "Deep learning on Computer Vision . blog . (1) NVIDIA介绍3D与Deep learning。 . 可以通过Youtube视频来了解一些具体的原理，发现室内重建是用的colmap，人物重建还是用的360°相机，人工的编辑很多。值得注意的是只有一部分是人工合成的 1。 . (2 Google Eearth 的介绍 . 介绍了google earth 从map pyramiding technique 到目前的time machine的变化。 . (3) EfficientDet . 一个多尺度的network用在图像识别的例子。 . (4) uDepth . Google在pixel 4 手机上用IR相机加上神经网络实现深度图的方法。 . (5) Turbo color map . 一个类似与jet的color map。 . (6) A Neural Weather Model for Eight-Hour Precipitation Forecasting . 利用深度学习与1 km 分辨率的影像实现天气预报。 . (7)Learning to See Transparent Objects . 透明物体有不少研究，类似的还有镜子中物体的重建。 . (8) Can You Trust Your Model’s Uncertainty? . Uncertainty一直是一个很重要的topic，data shift也很关键。 . 另外也有一个问题，就是label中的noisy怎么处理。 . (9) An Inside Look at Flood Forecasting . Flood Forecasting 的估计本质上是在DEM上做分析，深度学习就是代替了很多几何分析的步骤，一个更早的blog。 . (10) Meta-Dataset: A Dataset of Datasets for Few-Shot Learning . few-shot classification也是一个研究方向 2。 . (11) Speeding Up Neural Network Training with Data Echoing . 数据的处理是深度学习中很关键的一步。 . (12) Open-Sourcing BiT: Exploring Large-Scale Pre-training for Computer Vision . Transfer learning 或者 data shift是应用中很关键的一步。 . (13) Machine Learning-based Damage Assessment for Disaster Relief . 遥感影像的变化检测的应用。 . (14) Recreating Historical Streetscapes Using Deep Learning and Crowdsourcing . 一个利用多个数据的城市建模方法。 . (15) Rethinking Attention with Performers . Attention机制是图像处理中经常用的。 . (16) End-to-End, Transferable Deep RL for Graph Optimization . (17) Addressing Range Anxiety with Smart Electric Vehicle Routing . 类似与路径规划。 . (18) Machine Learning for Computer Architecture . (19) TracIn — A Simple Method to Estimate Training Data Influence . (20) Using Global Localization to Improve Navigation . (21) The Decade of Deep Learning . (22) Data Augmentation . 数据增强是深度学习比较工程化的一个步骤，主要是应对测试的数据与训练的数据不一致的情况。不过更多的是考虑当训练的数据比较少的时候，怎么提高performance。 . (23) Test and Validation Datasets . 参考文档，当模型训练好之后，并不知道他的表现如何。这个时候就可以使用验证集（Validation Dataset）来看看模型在新数据（验证集和测试集是不同的数据）上的表现如何。同时通过调整超参数，让模型处于最好的状态。 . 验证集有2个主要的作用： . 评估模型效果，为了调整超参数而服务 | 调整超参数，使得模型在验证集上的效果最好 | 说明： . 验证集不像训练集和测试集，它是非必需的。如果不需要调整超参数，就可以不使用验证集，直接用测试集来评估效果。 | 验证集评估出来的效果并非模型的最终效果，主要是用来调整超参数的，模型最终效果以测试集的评估结果为准。 | (24) Embendding . Embendding 用更朴素的解释是降维，会与Encoder有一些相似的地方，因为都是 dense representation of data，blog中是对NLP数据的处理。 . 另外有一个blog是对影像的处理，如blog1与blog2特征的维度也不是越多越好。 . (25) The Golden Age of Computer Vision . 主要介绍3D Vision的算法变化 ，目前主要是靠数据进行训练。 . (26) training dataset size . 在experiment中发现了一个规律，如果数据有很大的Imbalanced，那么增加数据量是提高evaluation的方法。 . 训练数据量也是一个很难确定的事，参考blog。 . (27) Domain Adaption . 介绍了domain adaption 与transfer learning, dataset shift 的关系。 . domain adaption是在一个数据上训练，在另外一个数据上测试。 . Transfer Learning 通常是指用fine tuning实现从一个model到另一个数据上的model的训练。 . Dataset shift 像一个更细节的解释，如 Covariate Shift；Prior Probability Shift；Concept Shift。 . paper . (1) Depth-supervised NeRF: Fewer Views and Faster Training for Free . website, paper . 论文充分利用了Colmap的结果，对比不用colmap大大提高了准确率， 减少了错误区域。 . 更早的文章NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis， blog。 . 类似的应用是depth from video，如google的depth from video blog和cinematic photo blog。 . (2) Urban Radiance Fields . website, paper . 论文不是基于RF的图像显示，而是有一个mesh。 . project . (1) Zillow Indoor Dataset . paper . 数据集是室内场景，包括影像和室内的layout。 . (2) ETH-MS localization dataset . 数据集是定位相关的，室内外都有。 . (3) Open Buildingsg . 是Google的一个从卫星影像提取建筑物的数据，不过貌似没有真值，看blog。 . (4) MIAP (More Inclusive Annotations for People) . 一个关于人物检测的数据集，参考Google的blog。 . (5) ViP-DeepLab: Learning Visual Perception with Depth-aware Video Panoptic Segmentation . panoptic segmentation是最近才流行的算法。 . (6) iGibson . 一个室内模拟器，和carla类似，一个blog的介绍。 . (7)Accelerating Neural Networks on Mobile and Web with Sparse Inference . 移动设备运行CNN是一个很工程的问题。 . (8) AutoML . 网络的查找是最近深度学习的一个重要的发展方向，Model Search是一个开源的库。 . (9) 3D Scene Understanding with TensorFlow 3D . 3D 是最近一个热点，Pytorch也有Pytorch 3D。 . (10) CO3D . CO3D是facebook的一个三维重建的数据集。 . (11) Objectron Dataset . 介绍3D box的数据集的blog。 . (12) Neural Architecture Search . Neural Architecture Search 是AutoML中一个常用的方法。 . (13) Image Matching Benchmark and Challenge . 特征点提取和匹配的数据集。 . (14) YouTube-8M Segments Dataset . 主要是video的Segments 与 undertanding的数据集。 . (15) Open Images V6 . image classification, object detection, visual relationship detection, and instance segmentation的数据集。 . (16) StreetLearn dataset . 主要是用来自动驾驶定位的，利用Google街景实现定位。 . (17) RxR: A Multilingual Benchmark for Navigation Instruction Following . 室内场景的数据集。 . (18) nuScenes . 类似与KITTI的数据，但是没有stereo的数据。 . (19) Urban forest monitoring . 包括aerial的tree的数据与街景的tree的数据。 . Tutorial . (1) Machine Learning Robustness, Fairness, and their Convergence . 主要是可以应对noise label的问题，noise label是一个有点偏应用的问题。 . (2) Do Wide and Deep Networks Learn the Same Things? . 探讨网络结构的的问题。 . Footnotes . https://www.zhihu.com/question/479214973 &#8617; . | https://zhuanlan.zhihu.com/p/61215293 &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2021/08/11/deep-learning.html",
            "relUrl": "/markdown/2021/08/11/deep-learning.html",
            "date": " • Aug 11, 2021"
        }
        
    
  
    
        ,"post19": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://whuwuteng.github.io/personal_page/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post20": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://whuwuteng.github.io/personal_page/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "Teng Wu . A PhD in photogrammetry and remote sensing, work on 3D vision. . contact : whuwuteng@gmail.com .",
          "url": "https://whuwuteng.github.io/personal_page/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://whuwuteng.github.io/personal_page/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}